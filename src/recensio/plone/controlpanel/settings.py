from plone.app.registry.browser import controlpanel
from recensio.plone import _
from zope import schema
from zope.interface import Interface


class IRecensioSettings(Interface):
    """Global recensio settings.

    This describes records stored in the configuration registry and
    obtainable via plone.registry.
    """

    review_submitted_email = schema.TextLine(
        title=_(
            "label_review_submitted_email",
            default="E-mail " "address for submitted reviews.",
        ),
        description=_(
            "description_review_submitted_email",
            default="Enter "
            "an e-mail address to which notifications will be sent, if a user "
            "submits a review for publication.",
        ),
        required=False,
        default="",
    )

    external_portal_url = schema.TextLine(
        title=_("label_external_portal_url", default="External URL of this portal"),
        description=_(
            "description_external_portal_url",
            default="The URL "
            "that will be used in the cross-portal search on other "
            "portals to link to contents inside this portal.",
        ),
        required=False,
        default="",
    )

    available_content_languages = schema.Text(
        title=_(
            "label_available_content_languages",
            default="Available " "languages for content in the site.",
        ),
        description=_(
            "description_available_content_languages",
            default="Enter one language (2 letter code) per line. These "
            'languages will be used for the fields "Language of '
            'Presentation" and "Language of reviewed text".',
        ),
        required=False,
        default="",
    )

    show_thematic_search = schema.Bool(
        title=_(
            "label_show_thematic_search",
            default='Show "Thematic search" section in the advanced ' "search",
        ),
        default=True,
    )

    xml_export_server = schema.TextLine(
        title=_("label_xml_export_server", default="Server name for Chronicon export"),
        description=_(
            "description_xml_export_server",
            default="Enter the server name that should be used for "
            "exporting XML metadata to Chronicon over SFTP.",
        ),
        required=False,
        default="",
    )

    xml_export_username = schema.TextLine(
        title=_("label_xml_export_username", default="User name for Chronicon export"),
        description=_(
            "description_xml_export_username",
            default="Enter the user name that should be used for "
            "exporting XML metadata to Chronicon over SFTP.",
        ),
        required=False,
        default="",
    )

    xml_export_password = schema.TextLine(
        title=_("label_xml_export_password", default="Password for Chronicon export"),
        description=_(
            "description_xml_export_password",
            default="Enter the password that belongs to the above " "SFTP user name.",
        ),
        required=False,
        default="",
    )

    xml_export_filename_prefix = schema.TextLine(
        title=_(
            "label_xml_export_filename_prefix",
            default="File name prefix for Chronicon export",
        ),
        description=_(
            "description_xml_export_filename_prefix",
            default="Enter a prefix for the name of the file that "
            "is uploaded to the Chronicon server. The final name "
            'will follow the schema "[prefix]_[date]_all.zip".',
        ),
        required=False,
        default="recensio",
    )

    doi_prefix = schema.TextLine(
        title=_("label_doi_prefix", default="DOI Prefix"),
        description=_(
            "description_doi_prefix", default="Prefix for autogenerated DOIs"
        ),
        required=True,
        default="10.15463/rec.",
    )

    doi_registration_url = schema.TextLine(
        title=_("label_doi_registration_url", default="URL for DOI registration"),
        description=_(
            "description_doi_registration_url",
            default="Endpoint URL for registration of DOIs",
        ),
        required=False,
        default="http://www.da-ra.de/dara/study/importXML?registration=true",
    )

    doi_registration_username = schema.TextLine(
        title=_(
            "label_doi_registration_username",
            default="User name for DOI registration",
        ),
        description=_(
            "description_doi_registration_username",
            default="User name to use as login for registration of " "DOIs",
        ),
        required=False,
        default="",
    )

    doi_registration_password = schema.TextLine(
        title=_(
            "label_doi_registration_password", default="Password for DOI registration"
        ),
        description=_(
            "description_doi_registration_password",
            default="Password that belongs to the above user name "
            "for registration of DOIs",
        ),
        required=False,
        default="",
    )


class RecensioSettingsEditForm(controlpanel.RegistryEditForm):
    schema = IRecensioSettings
    label = _("label_recensio_settings", default="Recensio settings")
    description = _(
        "description_recensio_setings",
        default="Below are some options for configuring the recensio portal.",
    )

    def update(self):
        super().update()
        self.widgets["available_content_languages"].rows = 15
        self.widgets["available_content_languages"].cols = 5


class RecensioSettingsControlPanel(controlpanel.ControlPanelFormWrapper):
    form = RecensioSettingsEditForm
